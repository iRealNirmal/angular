@use '../../constants' as *;
@use '~@angular/material/theming' as *;

@mixin buttons-theme($theme) {
  $primary: map-get($theme, primary);
  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);
  $is-dark-theme: map-get($theme, is-dark);

  // This rule overrides some Angular Material styles defined for `.mat-button`
  // (hence we include `.mat-button` in the selector).
  a.button.mat-button,
  .button {
    // COLORS

    &.button-secondary {
      background: $mediumgray;
      color: rgba($white, 0.87);
    }

    &.button-plain {
      background: $white;
      color: rgba($darkgray, 0.87);
    }

    &.button-subtle {
      background: $mediumgray;
      color: darken($offwhite, 10%);

      &:hover {
        color: rgba($white, 0.7);
      }
    }

    &.button-blue {
      background: $blue;
      color: rgba($white, 0.87);

      &:hover {
        color: rgba($white, 0.7);
      }
    }

    &.button-banner {
      background: $darkgray;
      color: rgba($white, 0.87);
    }
  }

  .cta-bar {
    .button {
      &:hover {
        color: $offwhite;
      }
    }
  }

  .group-buttons {
    // This rule overrides some Angular Material styles defined for `.mat-button`
    // (hence we include `.mat-button` in the selector).
    a.button.mat-button.filter-button {
      background-color: rgba($blue, 0.2);
      &.selected,
      &:hover {
        background-color: $blue;
        color: $white;
      }
    }
  }
}
